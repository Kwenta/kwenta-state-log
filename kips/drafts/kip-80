---
kip: 80
title: Smart Margin Account Upgrade v2.0.3
status: Draft
created: 2023-05-19
section: 4
---

## Simple Summary
The proposed enhancement involves upgrading Smart Margin (SM) accounts to incorporate commands that facilitate Uniswap v3 token swaps. Moreover, the integration of Uniswap's Permit2 functionality is suggested to enhance both user experience and security concerning token approvals.

## Abstract
These proposed modifications aim to enable users to begin trading on Kwenta using tokens other than sUSD. While sUSD will continue to serve as the base margin asset for interacting with Synthetix PerpsV2, the prerequisite of swapping non-sUSD tokens or ETH to sUSD prior to engaging with Kwenta will no longer be necessary.

The integration of Permit2 functionality facilitates the sharing and management of token approvals across various applications, resulting in a more cohesive, cost-effective, and secure user experience. By reducing transaction costs and enhancing the security of our SM accounts, Permit2 offers improvements in both usability and safety.

## Motivation
Optimizing the trader onboarding process on Kwenta holds the potential for wider adoption of the platform. The suggested alterations aim to augment the overall satisfaction of our existing user base by mitigating both the time and cost barriers associated with trading.

## Specification
The proposed modifications necessitate the introduction of a new command specific to Uniswap that facilitates token swaps. The execution of supported token swaps will be managed by Uniswap's SwapRouter (refer to https://github.com/Uniswap/v3-periphery/blob/main/contracts/SwapRouter.sol). Detailed information pertaining to the contract-level implementation can be found in the following comprehensive resource: https://docs.uniswap.org/contracts/v3/guides/swaps/single-swaps.

The integration of Permit2 will enable SM accounts to engage in signature-based, expiring approvals and transfers for any ERC20 token. This integration does not require the inclusion of additional commands; however, it mandates SM accounts to store the designated Permit2 address and rely on the respective contract to handle all token transfers. For a thorough understanding of the contract-level implementation with regard to signature-based transfers, please refer to the following comprehensive guide: https://docs.uniswap.org/contracts/permit2/reference/signature-transfer.

## Sources
(1) https://blog.uniswap.org/permit2-and-universal-router

## Copyright
Copyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).